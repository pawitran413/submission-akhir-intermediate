const CACHE_NAME="dicoding-stories-v3",API_BASE_URL="https://story-api.dicoding.dev/v1/",ASSETS_TO_CACHE=["./","./index.html","./app.bundle.js","./app.css","./favicon.png","./images/logo.png","./manifest.json","./icons/icon-72x72.png","./icons/icon-96x96.png","./icons/icon-128x128.png","./icons/icon-144x144.png","./icons/icon-192x192.png","./icons/icon-512x512.png","https://unpkg.com/leaflet@1.9.4/dist/leaflet.css","https://unpkg.com/leaflet@1.9.4/dist/leaflet.js"];self.addEventListener("install",(e=>{console.log("Service Worker: Installing..."),e.waitUntil(caches.open(CACHE_NAME).then((e=>(console.log("Service Worker: Caching app shell"),e.addAll(ASSETS_TO_CACHE)))).then((()=>{console.log("Service Worker: Install complete"),self.skipWaiting()})))})),self.addEventListener("activate",(e=>{console.log("Service Worker: Activating..."),e.waitUntil(caches.keys().then((e=>Promise.all(e.map((e=>{if(e!==CACHE_NAME)return console.log("Service Worker: Clearing old cache",e),caches.delete(e)}))))).then((()=>self.clients.claim())))})),self.addEventListener("fetch",(e=>{"GET"===e.request.method&&(e.request.url.startsWith(API_BASE_URL)?e.respondWith(caches.open(CACHE_NAME).then((async t=>{try{const n=await fetch(e.request);return n.ok&&t.put(e.request,n.clone()),n}catch(n){return t.match(e.request)}}))):e.respondWith(caches.match(e.request).then((t=>t||fetch(e.request).catch((()=>{if("navigate"===e.request.mode)return caches.match("./index.html")}))))))})),self.addEventListener("push",(e=>{console.log("Service Worker: Pushed");const t=e.data.json(),{title:n,options:i}=t,s=self.registration.showNotification(n,i);e.waitUntil(s)})),self.addEventListener("notificationclick",(e=>{console.log("Service Worker: Notification clicked"),e.notification.close();const t=clients.openWindow("./");e.waitUntil(t)}));